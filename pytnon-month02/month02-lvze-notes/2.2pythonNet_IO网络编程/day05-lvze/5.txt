前情回顾

1. 操作系统

   * 让应用层程序更好的访问硬件
   * 应用层 -> 操作系统 -> 硬件执行
   * Linux (开源)  命令操作

2. IO : IO密集 (cpu占用少,时间长,效率不高,可能有阻塞)
        计算密集 (cpu占用大,运算速度块,几乎没有阻塞)

3. 文件的操作 (打开,读写,关闭)

   打开 open()  r  w  a   +   b

       * 字节串(bytes)  encode() decode()

   读写  read()  readline()  readlines()

        write()   writelines()

   关闭  close()    with语句

4. 缓冲区

   减少磁盘交互次数,提高读写效率

   flush() 刷新缓存


作业 : 1. 理论问题整理,会回答
        1).OSI七层模型介绍一下，tcp/ip模型是什么？
        应用层 ： 提供用户服务，具体功能有应用程序实现
        表示层 ： 数据的压缩优化加密
        会话层 ： 建立用户级的连接，选择适当的传输服务
        传输层 ： 提供传输服务
        网络层 ： 路由选择，网络互联
        链路层 ： 进行数据交换，控制具体数据的发送
        物理层 ： 提供数据传输的硬件保证，网卡接口，传输介质
        优点
            1>. 建立了统一的工作流程
            2>. 分部清晰，各司其职，每个步骤分工明确
            3>. 降低了各个模块之间的耦合度，便于开发
        2)tcp服务和udp服务有什么区别？
        tcp服务：
            1>. 传输特征 ： 提供了可靠的数据传输，可靠性指数据传输过程中无丢失，无失序，无差错，无重复。
            2>. 实现手段 ： 在通信前需要建立数据连接，通信结束要正常断开连接。
            3>. 适用情况 ： 对数据传输准确性有明确要求，传数文件较大，需要确保可靠性的情况。比如：网页获取，文件下载，邮件收发。
        udp服务：
            1>. 传输特点 ： 不保证传输的可靠性，传输过程没有连接和断开，数据收发自由随意。
            2>. 适用情况 ： 网络较差，对传输可靠性要求不高。比如：网络视频，群聊，广播
        3)三次握手和四次挥手指什么，过程是怎样的？
         三次握手（建立连接）
            客户端向服务器发送消息报文请求连接
            服务器收到请求后，回复报文确定可以连接
            客户端收到回复，发送最终报文连接建立
         四次挥手（断开连接）
            主动方发送报文请求断开连接
            被动方收到请求后，立即回复，表示准备断开
            被动方准备就绪，再次发送报文表示可以断开
            主动方收到确定，发送最终报文完成断开
      2. 套接字一系列函数使用
      3. 客户端可以循环的给服务端发送消息

         一个客户端退出时如何让服务端可以继续连接下一个客户端

      4. 运行程序时,写一个日志文件,格式如下

         1. Fri Aug 30 17:57:45 2019
         2. Fri Aug 30 17:57:46 2019
         3. Fri Aug 30 17:57:47 2019
         4. Fri Aug 30 17:57:48 2019
         5. Fri Aug 30 17:57:58 2019

        每隔一秒写依次,每个时间占一行

        当程序终止运行,重写启动的时候,序列号能够衔接











